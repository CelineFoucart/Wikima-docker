# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.website.name: 'Wikima'
    app.website.description: "L'encyclopédie sans parti pris et complète"
    app.contact.mail: 'contact@wikima.com' 
    app.contact.name: 'Wikima Mail Bot'
    app.backup.folder: '%kernel.project_dir%/backup'
    locale: fr

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $websiteName: '%app.website.name%'
            $websiteDescription: '%app.website.description%'
            $contactMail: '%app.contact.mail%'
            $contactName: '%app.contact.name%'
            $backupFolder: '%app.backup.folder%'
    
    admin.category:
        class: App\Admin\CategoryAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Category, manager_type: orm, label: Categories, group: Encyclopédie}
    admin.portal:
        class: App\Admin\PortalAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Portal, manager_type: orm, label: Portals, group: Encyclopédie}
    admin.article:
        class: App\Admin\ArticleAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Article, manager_type: orm, label: Articles, group: Encyclopédie}
    admin.image:
        class: App\Admin\ImageAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Image, manager_type: orm, label: Image, group: Encyclopédie}
        
    admin.user:
        class: App\Admin\UserAdmin
        calls:
            - [setTemplate, ['edit', 'Admin/user_edit.html.twig']]
        tags:
            - { name: sonata.admin, model_class: App\Entity\User, manager_type: orm, label: Users, group: Utilisateurs}
    admin.comment:
        class: App\Admin\CommentAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Comment, manager_type: orm, label: Comments, group: Utilisateurs}
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Faker\Factory: ~

    App\DataFixtures\HashPasswordProvider:
        tags: [ { name: nelmio_alice.faker.provider } ]

    admin.backup:
        class: App\Admin\BackupAdmin
        tags:
            - { name: sonata.admin, model_class: App\Entity\Backup, controller: App\Controller\BackupAdminController, manager_type: orm, group: Administration, label: Backup }
